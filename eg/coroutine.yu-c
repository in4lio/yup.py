($! coroutines in gcc )

($__TITLE__)

($set coroute-define \name.\coroute.\enter:[].]
int coroute_($name)( void **ip )
{
	($enter)
	if ( *ip ) goto **ip;
	/* begin */
	($coroute)
	/* end */
	*ip = &&LC__END_($name);

	LC__END_($name):
	return ( 0 );
}
[\set )

($set __label_iter ($seqiter))

($macro coroute-yield ()/* yield */
do {
	($set __label (LC__($__label_iter)))
	*ip = &&($__label);
	return ( 1 );

	($__label):;
} while ( 0 ))

($macro coroute-call ( name ) coroute_($name)( &lc_($name) ))

#include <stdio.h>

void *lc_A = 0;
void *lc_B = 0;

($coroute-define A ]
	for ( i = 0; i < 10; i++ ) {
		printf( "A%d ", i );
		($coroute-yield);
	}
[ \enter ]
	static int i;
[ )

($coroute-define B ]
	for ( i = 0; i < 8; i++ ) {
		printf( "B%d ", i );
		($coroute-yield);
	}
[ \enter ]
	static int i;
[ )

int main( void )
{
	int alive_A, alive_B;
	do {
		alive_A = ($coroute-call A);
		alive_B = ($coroute-call B);
	} while ( alive_A || alive_B );
	printf( "\n" );

	return 0;
}
